version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nscore-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /usr/src/nscore/nginx/nginx.conf:/etc/nginx/nginx.conf 
      - /usr/src/nscore/nginx/sites:/etc/nginx/sites-enabled
#      - /usr/src/nscore/nginx/html:/usr/share/nginx/html  # Mapeo de la carpeta completa      
      - /usr/src/nscore/letsencrypt/www:/var/www/certbot:rw  # Para el reto HTTP-01
      - /etc/letsencrypt:/etc/letsencrypt  # Certificados generados
    restart: unless-stopped      
    depends_on:
      - nscore
    networks:
      - app-network

  nscore:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nscore  
    volumes:
      - /usr/src/nscore/sqllite:/usr/src
      - /usr/src/nscore/dotnet/appsettings.json:/App/appsettings.json
#    environment:
#      - ASPNETCORE_URLS=http://+:8080  # Fuerza a escuchar en 8080 
    restart: unless-stopped     
    networks:
      - app-network
  nscore-python:
    build: ./wwwroot/files/dockerPython
    image: nscore-python
    container_name: nscore-python
    volumes:
      - /usr/src/nscore/sqllite:/usr/src
    restart: unless-stopped
  certbot:
    image: certbot/certbot
    container_name: nscore-certbot
    volumes:
      - /usr/src/nscore/letsencrypt/www:/var/www/certbot:rw
      - /etc/letsencrypt:/etc/letsencrypt:rw
    entrypoint: "/bin/sh -c"
    command: |
      "trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;"
    depends_on:
      - nginx
    restart: unless-stopped
  duckdns:
    image: linuxserver/duckdns:latest
    container_name: nscore-duckdns
    env_file: /usr/src/nscore/duckdns/duckdns-secrets.env
    restart: always

networks:
  app-network:
    driver: bridge